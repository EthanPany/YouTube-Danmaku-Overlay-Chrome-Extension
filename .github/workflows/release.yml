name: Build and Release Chrome Extension

on:
  push:
    branches:
      - main  # Change this if your main branch has a different name
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '.gitignore'

# Add explicit permissions
permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  check-commit:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[release]')
    steps:
      - run: echo "Release commit detected, proceeding with build and release"

  build-and-release:
    needs: check-commit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Check if package.json exists
        id: check_package
        run: |
          if [ -f "package.json" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Error: package.json not found"
            exit 1
          fi

      - name: Install dependencies
        run: |
          # Remove package-lock.json if exists
          rm -f package-lock.json
          # Install specific versions of problematic dependencies first
          npm install --save-exact ajv@8.12.0 ajv-keywords@5.1.0 copy-webpack-plugin@11.0.0
          # Install core React dependencies
          npm install --save react@18 react-dom@18 prop-types danmaku
          # Install remaining dependencies
          npm install --legacy-peer-deps

      - name: Build extension
        run: |
          # Clear cache before building
          rm -rf node_modules/.cache
          npm run build

      - name: Get version from package.json
        id: package_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          if [ -z "$VERSION" ]; then
            echo "Error: No version found in package.json"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          # Also set release date
          echo "release_date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Create ZIP file
        run: |
          cd build
          zip -r ../YouTubeDanmakuOverlay.zip .

      - name: Extract release notes
        id: release_notes
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          if [[ $COMMIT_MSG =~ \[release\](.*?)\[/release\] ]]; then
            NOTES="${BASH_REMATCH[1]}"
          else
            NOTES="Release based on commit: $COMMIT_MSG"
          fi
          # Create a more detailed release body
          BODY="## Release v${{ steps.package_version.outputs.version }} (${{ steps.package_version.outputs.release_date }})

          ${NOTES}

          ### Installation
          1. Download the YouTubeDanmakuOverlay.zip file
          2. Unzip the file
          3. Go to chrome://extensions/
          4. Enable Developer Mode
          5. Click 'Load unpacked'
          6. Select the unzipped folder

          ### SHA-256 Checksum
          \`\`\`
          $(sha256sum YouTubeDanmakuOverlay.zip | cut -d' ' -f1)
          \`\`\`
          "
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release v${{ steps.package_version.outputs.version }}
          tag_name: v${{ steps.package_version.outputs.version }}
          body: ${{ steps.release_notes.outputs.body }}
          files: YouTubeDanmakuOverlay.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          
          